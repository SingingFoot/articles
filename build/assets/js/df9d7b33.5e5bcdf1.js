"use strict";(self.webpackChunkarticles=self.webpackChunkarticles||[]).push([[4634],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>u});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=o.createContext({}),m=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=m(e.components);return o.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},s=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),s=m(r),u=n,y=s["".concat(l,".").concat(u)]||s[u]||d[u]||a;return r?o.createElement(y,i(i({ref:t},p),{},{components:r})):o.createElement(y,i({ref:t},p))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=s;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var m=2;m<a;m++)i[m]=r[m];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}s.displayName="MDXCreateElement"},6833:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>m});var o=r(7462),n=(r(7294),r(3905));const a={sidebar_position:1,displayed_sidebar:"techdoc"},i="How to make commits locally and globally",c={unversionedId:"techdoc/Git/commit",id:"techdoc/Git/commit",title:"How to make commits locally and globally",description:"1. After you created new repository with {git init} or cloned an existing repository with {git clone {repository address}}, open your terminal in the local repository folder with the command:",source:"@site/docs/techdoc/Git/commit.md",sourceDirName:"techdoc/Git",slug:"/techdoc/Git/commit",permalink:"/docs/techdoc/Git/commit",draft:!1,editUrl:"https://github.com/SingingFoot/articles/docs/techdoc/Git/commit.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,displayed_sidebar:"techdoc"},sidebar:"techdoc",previous:{title:"How to create a pull request with git",permalink:"/docs/techdoc/Git/pullrequest"},next:{title:"Function.prototype.bind()",permalink:"/docs/techdoc/JavaScript/bind"}},l={},m=[],p={toc:m};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,o.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"how-to-make-commits-locally-and-globally"},"How to make commits locally and globally"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"After you created new repository with {git init} or cloned an existing repository with {git clone {repository address}}, open your terminal in the local repository folder with the command:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"cd {name of repository folder}\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"After you made some changes in your local repository folder you need to index them with {git add} command: "),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"git add .   ->   add the {space + dot} after {add} to index all the changed files. \n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Commit all the changes locally with {git commit} command and a comment."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"git commit -m 'Add new benchmarks' -> add {-m} mark and a comment in quotation marks. \ngit commit -a -m 'Add new benchmarks' -> add {-a} mark to index all the non-indexed changes you've made.\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"To make changes globally in your remote repository, use command {git push origin master} or just {git push}:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"git push origin master\n")))))}d.isMDXComponent=!0}}]);